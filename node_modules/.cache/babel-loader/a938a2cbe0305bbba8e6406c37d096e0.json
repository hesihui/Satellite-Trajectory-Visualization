{"ast":null,"code":"var _jsxFileName = \"/Users/sihui/Documents/SDE_Learning/spacex/starlink/src/components/SatSetting.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, InputNumber } from 'antd'; // Providing searching functionality\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SatSettingForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showSatellite = e => {\n      e.preventDefault(); // preventing the browser to do default tasks\n\n      this.props.form.validateFields((err, values) => {\n        // if there is no validation error\n        if (!err) {\n          // console.log('Received values of form: ', values);\n          this.props.onShow(values);\n        }\n      });\n    };\n  }\n\n  render() {\n    // props.form: getting from satSetting1\n    // highorder component\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 11\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 13\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n      className: \"sat-setting\",\n      onSubmit: this.showSatellite,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Longitude(degrees)\",\n        children: getFieldDecorator(\"longitude\", {\n          rules: [{\n            required: true,\n            message: \"Please input your Longitude\"\n          }]\n        })( /*#__PURE__*/_jsxDEV(InputNumber, {\n          min: -180,\n          max: 180,\n          style: {\n            width: \"100%\"\n          },\n          placeholder: \"Please input Longitude\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Latitude(degrees)\",\n        children: getFieldDecorator(\"latitude\", {\n          rules: [{\n            required: true,\n            message: \"Please input your Latitude\"\n          }]\n        })( /*#__PURE__*/_jsxDEV(InputNumber, {\n          placeholder: \"Please input Latitude\",\n          min: -90,\n          max: 90,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Elevation(meters)\",\n        children: getFieldDecorator(\"elevation\", {\n          rules: [{\n            required: true,\n            message: \"Please input your Elevation\"\n          }]\n        })( /*#__PURE__*/_jsxDEV(InputNumber, {\n          placeholder: \"Please input Elevation\",\n          min: -413,\n          max: 8850,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 28\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Altitude(degrees)\",\n        children: getFieldDecorator(\"altitude\", {\n          rules: [{\n            required: true,\n            message: \"Please input your Altitude\"\n          }]\n        })( /*#__PURE__*/_jsxDEV(InputNumber, {\n          placeholder: \"Please input Altitude\",\n          min: 0,\n          max: 90,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 28\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Duration(secs)\",\n        children: getFieldDecorator(\"duration\", {\n          rules: [{\n            required: true,\n            message: \"Please input your Duration\"\n          }]\n        })( /*#__PURE__*/_jsxDEV(InputNumber, {\n          placeholder: \"Please input Duration\",\n          min: 0,\n          max: 90,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 28\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        className: \"show-nearby\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"Find Nearby Satellite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } //dealing the submission of the form\n\n\n} //satsetting1ï¼šreturn a function\n\n\nconst SatSetting1 = Form.create({\n  name: 'satellite-setting'\n})(SatSettingForm);\nexport default SatSetting1;","map":{"version":3,"sources":["/Users/sihui/Documents/SDE_Learning/spacex/starlink/src/components/SatSetting.js"],"names":["React","Component","Form","Button","InputNumber","SatSettingForm","showSatellite","e","preventDefault","props","form","validateFields","err","values","onShow","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","rules","required","message","width","textAlign","SatSetting1","create","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,WAAtB,QAAwC,MAAxC,C,CAEA;;;;AACA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAyHnCK,aAzHmC,GAyHnBC,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF,GADiB,CACG;;AACpB,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC5C;AACA,YAAI,CAACD,GAAL,EAAU;AACN;AACA,eAAKH,KAAL,CAAWK,MAAX,CAAkBD,MAAlB;AACH;AACJ,OAND;AAOH,KAlIkC;AAAA;;AAEnCE,EAAAA,MAAM,GAAG;AACL;AACA;AACA,UAAM;AAACC,MAAAA;AAAD,QAAsB,KAAKP,KAAL,CAAWC,IAAvC;AACA,UAAMO,cAAc,GAAG;AACnBC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADE;AAENC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFE,OADS;AAKnBE,MAAAA,UAAU,EAAE;AACRH,QAAAA,EAAE,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADI;AAERC,QAAAA,EAAE,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR;AAFI;AALO,KAAvB;AAUA,wBACI,QAAC,IAAD,OAAUH,cAAV;AACM,MAAA,SAAS,EAAC,aADhB;AAEM,MAAA,QAAQ,EAAE,KAAKX,aAFrB;AAAA,8BAKI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,oBAAjB;AAAA,kBAEQU,iBAAiB,CAAC,WAAD,EAAc;AAC3BO,UAAAA,KAAK,EAAE,CACH;AACIC,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG;AADoB,SAAd,CAAjB,eAOG,QAAC,WAAD;AACC,UAAA,GAAG,EAAE,CAAC,GADP;AACY,UAAA,GAAG,EAAE,GADjB;AAEC,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAFR;AAGC,UAAA,WAAW,EAAC;AAHb;AAAA;AAAA;AAAA;AAAA,gBAPH;AAFR;AAAA;AAAA;AAAA;AAAA,cALJ,eAsBI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,mBAAjB;AAAA,kBAEQV,iBAAiB,CAAC,UAAD,EAAa;AAC1BO,UAAAA,KAAK,EAAE,CACH;AACIC,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG;AADmB,SAAb,CAAjB,eAOG,QAAC,WAAD;AACC,UAAA,WAAW,EAAC,uBADb;AAEC,UAAA,GAAG,EAAE,CAAC,EAFP;AAEW,UAAA,GAAG,EAAE,EAFhB;AAGC,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR;AAHR;AAAA;AAAA;AAAA;AAAA,gBAPH;AAFR;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAuCI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,mBAAjB;AAAA,kBAEQV,iBAAiB,CAAC,WAAD,EAAc;AAC3BO,UAAAA,KAAK,EAAE,CACH;AACIC,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG;AADoB,SAAd,CAAjB,eAOG,QAAC,WAAD;AACC,UAAA,WAAW,EAAC,wBADb;AAEC,UAAA,GAAG,EAAE,CAAC,GAFP;AAEY,UAAA,GAAG,EAAE,IAFjB;AAGC,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR;AAHR;AAAA;AAAA;AAAA;AAAA,gBAPH;AAFR;AAAA;AAAA;AAAA;AAAA,cAvCJ,eAwDI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,mBAAjB;AAAA,kBAEQV,iBAAiB,CAAC,UAAD,EAAa;AAC1BO,UAAAA,KAAK,EAAE,CACH;AACIC,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG;AADmB,SAAb,CAAjB,eAOG,QAAC,WAAD;AACC,UAAA,WAAW,EAAC,uBADb;AAEC,UAAA,GAAG,EAAE,CAFN;AAES,UAAA,GAAG,EAAE,EAFd;AAGC,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR;AAHR;AAAA;AAAA;AAAA;AAAA,gBAPH;AAFR;AAAA;AAAA;AAAA;AAAA,cAxDJ,eAyEI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,gBAAjB;AAAA,kBAEQV,iBAAiB,CAAC,UAAD,EAAa;AAC1BO,UAAAA,KAAK,EAAE,CACH;AACIC,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG;AADmB,SAAb,CAAjB,eAOG,QAAC,WAAD;AACC,UAAA,WAAW,EAAC,uBADb;AAEC,UAAA,GAAG,EAAE,CAFN;AAES,UAAA,GAAG,EAAE,EAFd;AAGC,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR;AAHR;AAAA;AAAA;AAAA;AAAA,gBAPH;AAFR;AAAA;AAAA;AAAA;AAAA,cAzEJ,eAyFI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,aAArB;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,SADT;AAEI,UAAA,QAAQ,EAAC,QAFb;AAGI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAzFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsGH,GAtHkC,CAwHnC;;;AAxHmC,C,CAqIvC;;;AACA,MAAMC,WAAW,GAAG1B,IAAI,CAAC2B,MAAL,CAAY;AAACC,EAAAA,IAAI,EAAE;AAAP,CAAZ,EAAyCzB,cAAzC,CAApB;AAEA,eAAeuB,WAAf","sourcesContent":["import React, {Component} from 'react';\n\nimport {Form, Button, InputNumber} from 'antd';\n\n// Providing searching functionality\nclass SatSettingForm extends Component {\n\n    render() {\n        // props.form: getting from satSetting1\n        // highorder component\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 11 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 13 },\n            },\n        };\n        return (\n            <Form {...formItemLayout}\n                  className=\"sat-setting\"\n                  onSubmit={this.showSatellite}\n            >\n\n                <Form.Item label=\"Longitude(degrees)\">\n                    {\n                        getFieldDecorator(\"longitude\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Longitude\",\n                                }\n                            ],\n                        })(<InputNumber\n                            min={-180} max={180}\n                            style={{width: \"100%\"}}\n                            placeholder=\"Please input Longitude\"\n                        />)\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"Latitude(degrees)\">\n                    {\n                        getFieldDecorator(\"latitude\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Latitude\",\n                                }\n                            ],\n                        })(<InputNumber\n                            placeholder=\"Please input Latitude\"\n                            min={-90} max={90}\n                            style={{width: \"100%\"}}\n                        />)\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"Elevation(meters)\">\n                    {\n                        getFieldDecorator(\"elevation\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Elevation\",\n                                }\n                            ],\n                        })(<InputNumber\n                            placeholder=\"Please input Elevation\"\n                            min={-413} max={8850}\n                            style={{width: \"100%\"}}\n                        />)\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"Altitude(degrees)\">\n                    {\n                        getFieldDecorator(\"altitude\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Altitude\",\n                                }\n                            ],\n                        })(<InputNumber\n                            placeholder=\"Please input Altitude\"\n                            min={0} max={90}\n                            style={{width: \"100%\"}}\n                        /> )\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"Duration(secs)\">\n                    {\n                        getFieldDecorator(\"duration\", {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: \"Please input your Duration\",\n                                }\n                            ],\n                        })(<InputNumber\n                            placeholder=\"Please input Duration\"\n                            min={0} max={90}\n                            style={{width: \"100%\"}} />)\n                    }\n                </Form.Item>\n\n                <Form.Item className=\"show-nearby\">\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        style={{textAlign: \"center\"}}\n                    >\n                        Find Nearby Satellite\n                    </Button>\n                </Form.Item>\n\n            </Form>\n        );\n    }\n\n    //dealing the submission of the form\n    showSatellite = e => {\n        e.preventDefault(); // preventing the browser to do default tasks\n        this.props.form.validateFields((err, values) => {\n            // if there is no validation error\n            if (!err) {\n                // console.log('Received values of form: ', values);\n                this.props.onShow(values);\n            }\n        });\n    }\n}\n\n//satsetting1ï¼šreturn a function\nconst SatSetting1 = Form.create({name: 'satellite-setting'})(SatSettingForm)\n\nexport default SatSetting1;"]},"metadata":{},"sourceType":"module"}